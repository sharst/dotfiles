#!/usr/bin/python

import os
import requests
import shutil
import subprocess
import todoist
from todoist.api import TodoistAPI
# Where to read the configs from
password_base = os.path.join(os.getenv('HOME') + '/.password-store/')


TARGET_PROJECT = "Magazino"

def clear_temp():
    if os.path.exists(os.path.expanduser('~/.todoist-sync')):
        shutil.rmtree(os.path.expanduser('~/.todoist-sync'))

def notification(text):
    subprocess.call(["notify-send", text])

class TodoistSync(object):
    def get_window_name(self):
        bash_command = ['xdotool', 'getwindowfocus', 'getwindowname']
        p = subprocess.Popen(bash_command, stdout=subprocess.PIPE)
        out, err = p.communicate()
        return out

    def create_todo_from_window_name(self, out):
        if "Mattermost" in out:
            self.create_todo("Come back to " + out)
        else:
            self.create_todo("Come back to " + out)

    def create_todo(self, text):
        proj_id = next(proj.data['id']
                       for proj in self.td_api.projects.all()
                       if proj.data['name'] == TARGET_PROJECT)
        item = self.td_api.items.add(text, project_id=proj_id, priority=4, date_string="today")
        notification("Added an item to todoist: " + text)
        self.safe_sync()

    def setup(self):
        clear_temp()
        # Set up Todoist
        with open(password_base + 'todoist_', 'r') as config:
            self.td_api = TodoistAPI(config.read().strip())
        self.safe_sync()

    def safe_sync(self):
        try:
            self.td_api.commit()
            self.td_api.sync()
        except (todoist.api.SyncError, requests.exceptions.ConnectionError) as e:
            print "Couldn't sync, restarting connection to todoist..."
            self.setup()

if __name__ == "__main__":
    try:
        sync = TodoistSync()
        out = sync.get_window_name()
        notification("Adding item to todoist")
        sync.setup()
        sync.create_todo_from_window_name(out)
    except:
        notification("todoist_reminder: ERROR!")

